{"version":3,"sources":["utils/formatters.ts","utils/dom.ts","utils/utils.ts","core/checkKeywords.ts","utils/path.ts","components/renderViolation.tsx","utils/classify.ts","pages/Check.tsx","core/checkUrlDomains.ts","content/instructions.md","pages/Instructions.tsx","utils/react.ts","utils/snarkdown.ts","Routes.tsx","App.tsx","index.tsx"],"names":["nonWord","stopWords","map","str","replace","source","nonWordOrStopWord","regex","join","normalize","x","trim","renderAnchors","el","defaultVal","slugs","Proxy","Object","create","get","target","key","querySelectorAll","heading","textContent","slug","toLowerCase","id","filter","Boolean","classList","add","htmlToFragment","html","temp","document","createElement","innerHTML","content","cache","Map","joinPath","segments","process","flat","renderViolation","violation","kind","domain","className","dangerouslySetInnerHTML","__html","context","xs","classifier","left","right","push","classify","keywordCounts","count","minCountPerKeyword","keyword","notFound","found","length","minKeywordsNeeded","idx","readFile","file","Promise","res","reader","FileReader","onload","e","result","readAsArrayBuffer","Check","useState","_keywords","_setKeywords","keywords","useMemo","split","listId","domainBlacklist","setDomainBlacklist","useEffect","fetch","then","a","headers","text","list","loading","setLoading","htmlResult","setHtmlResult","fileChangeHandler","useCallback","files","currentTarget","arrayBuffer","mammoth","convertToHtml","keywordViolations","value","keywordMatchers","sort","b","matcher","i","findIndex","y","Math","ceil","leafNodes","has","fragment","childNodes","nodeType","Node","TEXT_NODE","set","leafNode","keywordMatcher","test","checkKeywords","domainViolations","violations","protocolMatcher","matchers","protocol","match","hostname","pattern","matchPattern","endsWith","slice","assign","links","link","url","href","parent","parentElement","m","find","domains","RegExp","checkUrlDomains","onChange","type","placeholder","Instructions","callback","setHtml","history","useHistory","instructionsMdUrl","l","some","ch","startsWith","_snarkdown","ref","getAttribute","setAttribute","prependPublicUrlToRelativeLinks","addEventListener","nodeName","preventDefault","window","location","origin","open","contains","hash","scrollIntoView","handleLinks","setTimeout","matchedEl","pipe","decodeURIComponent","CSS","escape","querySelector","scrollHashIntoView","parentEl","observer","MutationObserver","disconnect","observe","childList","Routes","exact","path","App","basename","activeClassName","to","ts","console","info","Date","Number","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.13c9921e.chunk.js","sourcesContent":["import { regex } from 'fancy-regex'\n\nexport const slugify = (str: string) =>\n\tstr\n\t\t.toLowerCase()\n\t\t.replace(\n\t\t\tregex('gu')`[\n\t\t\t\t^\n\t\t\t\t\\p{Letter}\n\t\t\t\t\\p{Mark}\n\t\t\t\t\\p{Number}\n\t\t\t]+`,\n\t\t\t' ',\n\t\t)\n\t\t.trim()\n\t\t.replace(/\\s+/g, '-')\n\nexport const filenameify = (date: Date) =>\n\tdate.toISOString().replace(/:/g, '_').slice(0, 19) + 'Z'\n\nconst nonWord = /[^\\p{Letter}\\p{Mark}\\p{Number}]+/gu\n\nconst forgivingPunctuation = (str: string) =>\n\tstr.replace(nonWord, nonWord.source)\n\n// https://www.semrush.com/blog/seo-stop-words/\n// prettier-ignore\nconst stopWords = ['a', 'about', 'above', 'actually', 'after', 'again', 'against', 'all', 'almost', 'also', 'although', 'always', 'am', 'an', 'and', 'any', 'are', 'as', 'at', 'be', 'became', 'become', 'because', 'been', 'before', 'being', 'below', 'between', 'both', 'but', 'by', 'can', 'could', 'did', 'do', 'does', 'doing', 'down', 'during', 'each', 'either', 'else', 'few', 'for', 'from', 'further', 'had', 'has', 'have', 'having', 'he', \"he'd\", \"he'll\", 'hence', \"he's\", 'her', 'here', \"here's\", 'hers', 'herself', 'him', 'himself', 'his', 'how', \"how's\", 'I', \"I'd\", \"I'll\", \"I'm\", \"I've\", 'if', 'in', 'into', 'is', 'it', \"it's\", 'its', 'itself', 'just', \"let's\", 'may', 'maybe', 'me', 'might', 'mine', 'more', 'most', 'must', 'my', 'myself', 'neither', 'nor', 'not', 'of', 'oh', 'on', 'once', 'only', 'ok', 'or', 'other', 'ought', 'our', 'ours', 'ourselves', 'out', 'over', 'own', 'same', 'she', \"she'd\", \"she'll\", \"she's\", 'should', 'so', 'some', 'such', 'than', 'that', \"that's\", 'the', 'their', 'theirs', 'them', 'themselves', 'then', 'there', \"there's\", 'these', 'they', \"they'd\", \"they'll\", \"they're\", \"they've\", 'this', 'those', 'through', 'to', 'too', 'under', 'until', 'up', 'very', 'was', 'we', \"we'd\", \"we'll\", \"we're\", \"we've\", 'were', 'what', \"what's\", 'when', 'whenever', \"when's\", 'where', 'whereas', 'wherever', \"where's\", 'whether', 'which', 'while', 'who', 'whoever', \"who's\", 'whose', 'whom', 'why', \"why's\", 'will', 'with', 'within', 'would', 'yes', 'yet', 'you', \"you'd\", \"you'll\", \"you're\", \"you've\", 'your', 'yours', 'yourself', 'yourselves'].map(forgivingPunctuation)\n\nconst nonWordOrStopWord = regex('giu')`\n\t(?:\n\t\t${nonWord}\n\t\t| \\b(?:${stopWords.join('|')})\\b\n\t)+\n`\n\nexport const normalize = (x: string) =>\n\tx.replace(nonWordOrStopWord, '\\x20').trim()\n","import { useHistory } from 'react-router-dom'\nimport { pipe } from 'fp-ts/function'\nimport { slugify } from './formatters'\nimport { hashWithDefault } from './utils'\n\nexport const renderAnchors = (el: HTMLElement) => {\n\tconst slugs = hashWithDefault(0)\n\n\tfor (const heading of el.querySelectorAll(\n\t\t'h2, h3, h4, h5, h6, .anchored',\n\t)) {\n\t\tif (heading.textContent) {\n\t\t\tconst slug = slugify(heading.textContent) || 'heading'\n\n\t\t\tconst x = ++slugs[slug]\n\n\t\t\theading.id = [slug, x > 1 && x].filter(Boolean).join('-')\n\t\t\theading.classList.add('anchored')\n\t\t}\n\t}\n}\n\nexport const prependPublicUrlToRelativeLinks = (el: HTMLElement) => {\n\tfor (const link of el.querySelectorAll('a')) {\n\t\tconst href = link.getAttribute('href')\n\n\t\tif (href?.startsWith('/')) {\n\t\t\tlink.setAttribute('href', process.env.PUBLIC_URL + href)\n\t\t}\n\t}\n}\n\nexport const handleLinks = (\n\tel: HTMLElement,\n\thistory: ReturnType<typeof useHistory>,\n) => {\n\tel.addEventListener('click', (e) => {\n\t\tconst target = e.target as HTMLAnchorElement\n\t\tconst href = target.getAttribute('href')\n\n\t\tif (target.nodeName === 'A' && href) {\n\t\t\te.preventDefault()\n\n\t\t\tif (\n\t\t\t\thref.startsWith('http') &&\n\t\t\t\t!href.startsWith(window.location.origin)\n\t\t\t) {\n\t\t\t\twindow.open(href, '_blank', 'noopener noreferrer')\n\t\t\t} else {\n\t\t\t\thistory.push(href.slice(process.env.PUBLIC_URL.length))\n\t\t\t}\n\t\t} else if (target.classList.contains('anchored')) {\n\t\t\twindow.location.hash = target.id\n\t\t\ttarget.scrollIntoView(true)\n\t\t}\n\t})\n}\n\nexport const scrollHashIntoView = (el: HTMLElement) => {\n\tif (window.location.hash) {\n\t\tsetTimeout(() => {\n\t\t\tconst matchedEl = pipe(\n\t\t\t\twindow.location.hash.slice(1),\n\t\t\t\tdecodeURIComponent,\n\t\t\t\tCSS.escape,\n\t\t\t\t(id) => el.querySelector(`#${id}`),\n\t\t\t)\n\n\t\t\tmatchedEl?.scrollIntoView(true)\n\t\t\t// 100ms to counteract browser position retaining\n\t\t}, 100)\n\t}\n}\n\nexport const htmlToFragment = (html: string) => {\n\tconst temp = document.createElement('template')\n\ttemp.innerHTML = html\n\n\treturn temp.content\n}\n","export const hashWithDefault = <T>(defaultVal: T) =>\n\tnew Proxy(Object.create(null) as Record<string, T>, {\n\t\tget(target, key: string) {\n\t\t\treturn key in target ? target[key] : defaultVal\n\t\t},\n\t})\n","import { regex } from 'fancy-regex'\nimport { Violation } from '../types/Violation'\nimport { htmlToFragment } from '../utils/dom'\nimport { normalize } from '../utils/formatters'\n\nconst cache = new Map<string, HTMLElement[]>()\n\nconst MIN_COUNT_PER_KEYWORD = 1\n\nexport const checkKeywords = (\n\thtml: string,\n\tkeywords: string[],\n): Violation[] => {\n\tif (!keywords.length) {\n\t\treturn [\n\t\t\t{\n\t\t\t\tkind: 'NoKeywordsSpecified',\n\t\t\t},\n\t\t]\n\t} else {\n\t\t// matcher operates on normalized strings with\n\t\t// all punctuation and stop-words replaced with single space ('\\x20')\n\t\tconst keywordMatchers = [...keywords]\n\t\t\t.sort((a, b) => b.length - a.length)\n\t\t\t.map((keyword) => ({\n\t\t\t\tkeyword,\n\t\t\t\tcount: 0,\n\t\t\t\tmatcher: regex('iu')`\n\t\t\t\t\t(?<=^|\\x20)\n\t\t\t\t\t${normalize(keyword)}\n\t\t\t\t\t(?=$|\\x20)\n\t\t\t\t`,\n\t\t\t}))\n\t\t\t.filter(\n\t\t\t\t(x, i, a) => a.findIndex((y) => x.keyword === y.keyword) === i,\n\t\t\t)\n\n\t\tconst minKeywordsNeeded = Math.ceil(keywordMatchers.length / 2)\n\n\t\tconst leafNodes = cache.has(html)\n\t\t\t? cache.get(html)!\n\t\t\t: (() => {\n\t\t\t\t\tconst fragment = htmlToFragment(html)\n\n\t\t\t\t\tconst leafNodes = [\n\t\t\t\t\t\t...fragment.querySelectorAll<HTMLElement>('*'),\n\t\t\t\t\t].filter(\n\t\t\t\t\t\t(x) =>\n\t\t\t\t\t\t\tx.childNodes.length === 1 &&\n\t\t\t\t\t\t\tx.childNodes[0].nodeType === Node.TEXT_NODE,\n\t\t\t\t\t)\n\n\t\t\t\t\tcache.set(html, leafNodes)\n\n\t\t\t\t\treturn leafNodes\n\t\t\t  })()\n\n\t\tfor (const leafNode of leafNodes) {\n\t\t\t// normalize all punctuation and stop-words to single space ('\\x20')\n\t\t\tconst text = normalize(leafNode.textContent!)\n\n\t\t\tfor (const keywordMatcher of keywordMatchers) {\n\t\t\t\tif (keywordMatcher.matcher.test(text)) {\n\t\t\t\t\tkeywordMatcher.count++\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn keywordMatchers.filter((x) => x.count >= MIN_COUNT_PER_KEYWORD)\n\t\t\t.length < minKeywordsNeeded\n\t\t\t? [\n\t\t\t\t\t{\n\t\t\t\t\t\tkind: 'TooFewKeywordsFound',\n\t\t\t\t\t\tminKeywordsNeeded,\n\t\t\t\t\t\tkeywordCounts: keywordMatchers,\n\t\t\t\t\t\tminCountPerKeyword: MIN_COUNT_PER_KEYWORD,\n\t\t\t\t\t},\n\t\t\t  ]\n\t\t\t: []\n\t}\n}\n","import { join } from 'path'\n\nexport const joinPath = (...segments: string[]) =>\n\tjoin(process.env.PUBLIC_URL, ...segments.flat())\n","import { Violation } from '../types/Violation'\nimport { classify } from '../utils/classify'\n\nexport const renderViolation = (violation: Violation): JSX.Element => {\n\tswitch (violation.kind) {\n\t\tcase 'Domain':\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tMatched blacklisted domain\n\t\t\t\t\t\t<code>{violation.domain}</code>. Context:\n\t\t\t\t\t</p>\n\t\t\t\t\t<blockquote\n\t\t\t\t\t\tclassName='violation-context'\n\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t__html: violation.context,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)\n\t\tcase 'NoKeywordsSpecified':\n\t\t\treturn <p>No keywords specified. Please specify target keywords.</p>\n\t\tcase 'TooFewKeywordsFound':\n\t\t\tconst [notFound, found] = classify(\n\t\t\t\tviolation.keywordCounts,\n\t\t\t\t(x) => x.count >= violation.minCountPerKeyword,\n\t\t\t).map((xs) => xs.map((x) => x.keyword))\n\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tOnly {found.length} of {found.length + notFound.length}{' '}\n\t\t\t\t\t\tkeywords found (\n\t\t\t\t\t\t<strong>{violation.minKeywordsNeeded} needed</strong>)\n\t\t\t\t\t</p>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<strong>Found:</strong>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{found.map((keyword, idx) => (\n\t\t\t\t\t\t\t\t<li key={idx}>{keyword}</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<strong>Not found:</strong>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{notFound.map((keyword, idx) => (\n\t\t\t\t\t\t\t\t<li key={idx}>{keyword}</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)\n\t}\n}\n","export const classify = <T>(xs: T[], classifier: (x: T) => boolean) => {\n\tconst left: T[] = []\n\tconst right: T[] = []\n\n\tfor (const x of xs) {\n\t\t;(classifier(x) ? right : left).push(x)\n\t}\n\n\treturn [left, right] as [T[], T[]]\n}\n","import {\n\tFC,\n\tuseCallback,\n\tuseEffect,\n\tuseMemo,\n\tuseState,\n\tReactEventHandler,\n} from 'react'\nimport { checkUrlDomains } from '../core/checkUrlDomains'\nimport { checkKeywords } from '../core/checkKeywords'\nimport { joinPath } from '../utils/path'\nimport mammoth from 'mammoth'\nimport { renderViolation } from '../components/renderViolation'\n\nexport const readFile = (file: File) =>\n\tnew Promise<ArrayBuffer>((res) => {\n\t\tconst reader = new FileReader()\n\n\t\treader.onload = (e) => res(e.target!.result as ArrayBuffer)\n\n\t\treader.readAsArrayBuffer(file)\n\t})\n\ntype HtmlResult = Awaited<ReturnType<typeof mammoth.convertToHtml>>\n\nexport const Check: FC = () => {\n\tconst [_keywords, _setKeywords] = useState('')\n\n\tconst keywords = useMemo(\n\t\t() =>\n\t\t\t_keywords\n\t\t\t\t.split('\\n')\n\t\t\t\t.map((x) => x.trim().split('\\t')[0])\n\t\t\t\t.filter((x) => x && x.toLowerCase() !== 'keyword'),\n\t\t[_keywords],\n\t)\n\n\tconst listId = 'list'\n\n\tconst [domainBlacklist, setDomainBlacklist] = useState<string[]>([])\n\n\tuseEffect(() => {\n\t\tif (listId) {\n\t\t\tfetch(joinPath('lists', `${listId}.txt`)).then(async (res) => {\n\t\t\t\tif (\n\t\t\t\t\tres.headers.get('content-type')?.split(';')[0].trim() !==\n\t\t\t\t\t'text/plain'\n\t\t\t\t) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tconst list = await res.text()\n\n\t\t\t\tsetDomainBlacklist(list.split('\\n').filter(Boolean))\n\t\t\t})\n\t\t}\n\t}, [listId])\n\n\tconst [loading, setLoading] = useState(false)\n\n\tconst [htmlResult, setHtmlResult] = useState<null | HtmlResult>(null)\n\n\tconst fileChangeHandler: ReactEventHandler<HTMLInputElement> = useCallback(\n\t\tasync (e) => {\n\t\t\tconst { files } = e.currentTarget\n\n\t\t\tif (!files?.length) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tsetLoading(true)\n\n\t\t\tconst file = files[0]\n\t\t\tconst arrayBuffer = await readFile(file)\n\n\t\t\tconst result = await mammoth.convertToHtml({ arrayBuffer })\n\n\t\t\tsetHtmlResult(result)\n\n\t\t\tsetLoading(false)\n\t\t},\n\t\t[],\n\t)\n\n\tconst keywordViolations = useMemo(\n\t\t() =>\n\t\t\thtmlResult?.value ? checkKeywords(htmlResult.value, keywords) : [],\n\t\t[htmlResult, keywords],\n\t)\n\n\tconst domainViolations = useMemo(\n\t\t() =>\n\t\t\thtmlResult?.value\n\t\t\t\t? checkUrlDomains(htmlResult.value, domainBlacklist)\n\t\t\t\t: [],\n\t\t[htmlResult, domainBlacklist],\n\t)\n\n\tconst violations = useMemo(\n\t\t() => [...domainViolations, ...keywordViolations],\n\t\t[keywordViolations, domainViolations],\n\t)\n\n\treturn !domainBlacklist.length ? (\n\t\t<>\n\t\t\t<div className='spaced'>Loading...</div>\n\t\t</>\n\t) : (\n\t\t<form>\n\t\t\t<h1>Check</h1>\n\t\t\t<div className='spaced'>\n\t\t\t\t<label>\n\t\t\t\t\tUpload file (DOCX)\n\t\t\t\t\t<input onChange={fileChangeHandler} type='file' />\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div className='spaced'>\n\t\t\t\t<label>\n\t\t\t\t\tKeywords\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tplaceholder='Paste target keywords here (one per line)'\n\t\t\t\t\t\tonChange={(e) => _setKeywords(e.currentTarget.value)}\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\t\t\t</div>\n\n\t\t\t<hr />\n\n\t\t\t<output>\n\t\t\t\t<div>\n\t\t\t\t\t{loading ? (\n\t\t\t\t\t\t<>Checking...</>\n\t\t\t\t\t) : !htmlResult ? (\n\t\t\t\t\t\t<>No file selected.</>\n\t\t\t\t\t) : !violations.length ? (\n\t\t\t\t\t\t<>No issues found 🎉</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{violations.map((x, i) => (\n\t\t\t\t\t\t\t\t<li key={i}>{renderViolation(x)}</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</output>\n\t\t</form>\n\t)\n}\n","import { matchPattern } from 'browser-extension-url-match'\nimport { Violation } from '../types/Violation'\nimport { htmlToFragment } from '../utils/dom'\n\nexport const checkUrlDomains = (\n\thtml: string,\n\tdomainBlacklist: string[],\n): Violation[] => {\n\tconst violations: Violation[] = []\n\tconst fragment = htmlToFragment(html)\n\n\tconst anyProtocol = '*://'\n\tconst protocolMatcher = /^\\w+:\\/{2,3}/\n\n\tconst matchers = domainBlacklist.map((domain) => {\n\t\tconst protocol = domain.match(protocolMatcher)?.[0] ?? anyProtocol\n\n\t\tconst segments = domain.replace(protocolMatcher, '').split('.')\n\n\t\tconst hostname = (\n\t\t\tsegments.length === 2 ? ['*', ...segments] : segments\n\t\t).join('.')\n\n\t\tconst pattern = matchPattern(\n\t\t\t`${protocol}${\n\t\t\t\thostname.endsWith('/') ? hostname.slice(0, -1) : hostname\n\t\t\t}/*`,\n\t\t)\n\n\t\treturn Object.assign({ domain }, pattern)\n\t})\n\n\tconst links = fragment.querySelectorAll<HTMLAnchorElement>('a[href]')\n\n\tconst leafNodes = [...fragment.querySelectorAll<HTMLElement>('*')].filter(\n\t\t(x) =>\n\t\t\tx.childNodes.length === 1 &&\n\t\t\tx.childNodes[0].nodeType === Node.TEXT_NODE,\n\t)\n\n\tfor (const link of links) {\n\t\tconst { href: url, textContent: text } = link\n\n\t\tconst parent = link.parentElement ?? link\n\n\t\tfor (const x of parent.querySelectorAll('a[href]')) {\n\t\t\tx.classList[x === link ? 'add' : 'remove']('violation')\n\t\t}\n\n\t\tconst m = matchers.find((m) => m.match(url))\n\n\t\tif (m) {\n\t\t\tconst { pattern, domain } = m\n\n\t\t\tviolations.push({\n\t\t\t\tkind: 'Domain',\n\t\t\t\turl,\n\t\t\t\tcontext: parent.innerHTML,\n\t\t\t\ttext: text!,\n\t\t\t\tpattern,\n\t\t\t\tdomain,\n\t\t\t})\n\t\t}\n\t}\n\n\tfor (const leafNode of leafNodes) {\n\t\tconst text = leafNode.textContent!\n\n\t\tconst parent = leafNode.parentElement ?? leafNode\n\n\t\tconst domains = text.match(/[a-z0-9-]+(\\.[a-z0-9]+)+/gi) ?? []\n\n\t\tfor (const domain of domains) {\n\t\t\tconst m = matchers.find((m) => m.match(`https://${domain}`))\n\n\t\t\tif (m) {\n\t\t\t\tconst { pattern, domain } = m\n\n\t\t\t\tconst context = parent.innerHTML.replace(\n\t\t\t\t\tnew RegExp(domain.replace(/\\./g, '\\\\.'), 'i'),\n\t\t\t\t\t`<span class=\"violation\">${domain}</span>`,\n\t\t\t\t)\n\n\t\t\t\tviolations.push({\n\t\t\t\t\tkind: 'Domain',\n\t\t\t\t\turl: domain,\n\t\t\t\t\tcontext,\n\t\t\t\t\ttext: text!,\n\t\t\t\t\tpattern,\n\t\t\t\t\tdomain,\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\treturn violations\n}\n","export default __webpack_public_path__ + \"static/media/instructions.a9a97ea1.md\";","import { FC, useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport instructionsMdUrl from '../content/instructions.md'\nimport {\n\thandleLinks,\n\tprependPublicUrlToRelativeLinks,\n\trenderAnchors,\n\tscrollHashIntoView,\n} from '../utils/dom'\nimport { onHtmlRender } from '../utils/react'\nimport { snarkdown } from '../utils/snarkdown'\n\nexport const Instructions: FC = () => {\n\tconst [html, setHtml] = useState('')\n\n\tconst history = useHistory()\n\n\tuseEffect(() => {\n\t\tfetch(instructionsMdUrl, { cache: 'force-cache' }).then(async (res) => {\n\t\t\tconst content = await res.text()\n\n\t\t\tconst html = snarkdown(content)\n\n\t\t\tsetHtml(html)\n\t\t})\n\t}, [])\n\n\treturn (\n\t\t<div\n\t\t\tref={onHtmlRender((el) => {\n\t\t\t\t// setup\n\t\t\t\trenderAnchors(el)\n\t\t\t\tprependPublicUrlToRelativeLinks(el)\n\t\t\t\thandleLinks(el, history)\n\n\t\t\t\t// effects\n\t\t\t\tscrollHashIntoView(el)\n\t\t\t})}\n\t\t\tdangerouslySetInnerHTML={{ __html: html }}\n\t\t/>\n\t)\n}\n","export const onHtmlRender =\n\t(callback: (parentEl: HTMLElement) => void) =>\n\t(parentEl: HTMLElement | null) => {\n\t\tif (!parentEl) return\n\n\t\tconst observer = new MutationObserver((m) => {\n\t\t\tcallback(parentEl)\n\n\t\t\tobserver.disconnect()\n\t\t})\n\n\t\tobserver.observe(parentEl, { childList: true })\n\t}\n","import { default as _snarkdown } from 'snarkdown'\n\nexport const snarkdown = (md: string) => {\n\tconst html = md\n\t\t.split(/((?<=^|\\n)```\\r?\\n[\\s\\S]*?\\r?\\n```)/)\n\t\t.map((m, i) =>\n\t\t\ti % 2\n\t\t\t\t? `<pre><code>${m\n\t\t\t\t\t\t.split(/\\r?\\n/)\n\t\t\t\t\t\t.slice(1, -1)\n\t\t\t\t\t\t.join('\\n')}</pre></code>`\n\t\t\t\t: m\n\t\t\t\t\t\t.split(/(?:\\r?\\n){2,}/)\n\t\t\t\t\t\t.map((l) => {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t[' ', '\\t', '#', '-', '*', '`', '~'].some(\n\t\t\t\t\t\t\t\t\t(ch) => l.startsWith(ch),\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn /^\\s*-{3,}\\s*$/.test(l)\n\t\t\t\t\t\t\t\t\t? `<hr>`\n\t\t\t\t\t\t\t\t\t: _snarkdown(l)\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn `<p>${_snarkdown(l)}</p>`\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.join(''),\n\t\t)\n\t\t.join('')\n\t\t.replace(/<p><\\/p>/g, '')\n\n\treturn html\n}\n","import { FC } from 'react'\nimport { Check } from './pages/Check'\nimport { Switch, Route } from 'react-router-dom'\nimport { Instructions } from './pages/Instructions'\n\nexport const Routes: FC = () => {\n\treturn (\n\t\t<Switch>\n\t\t\t<Route exact path='/'>\n\t\t\t\t<Check />\n\t\t\t</Route>\n\t\t\t<Route path='/instructions'>\n\t\t\t\t<Instructions />\n\t\t\t</Route>\n\t\t</Switch>\n\t)\n}\n","import { FC } from 'react'\nimport { BrowserRouter as Router, NavLink } from 'react-router-dom'\nimport { Routes } from './Routes'\n\nexport const App: FC = () => {\n\treturn (\n\t\t<>\n\t\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t\t<nav className='tabs'>\n\t\t\t\t\t<NavLink exact activeClassName='active' to='/'>\n\t\t\t\t\t\tCheck\n\t\t\t\t\t</NavLink>\n\t\t\t\t\t<NavLink activeClassName='active' to='/instructions'>\n\t\t\t\t\t\tInstructions\n\t\t\t\t\t</NavLink>\n\t\t\t\t</nav>\n\t\t\t\t<main className='container'>\n\t\t\t\t\t<Routes />\n\t\t\t\t</main>\n\t\t\t</Router>\n\t\t</>\n\t)\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'chota/dist/chota.css' // can't use .min.css due to CRA transpiling bug\nimport './styles/index.css'\nimport { App } from './App'\nimport { joinPath } from './utils/path'\n\nfetch(joinPath('build-timestamp.txt')).then(async (res) => {\n\tconst ts = await res.text()\n\n\tconsole.info('App last built', new Date(Number(ts)))\n})\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n)\n"],"sourceRoot":""}
{"version":3,"sources":["utils/formatters.ts","utils/dom.ts","utils/utils.ts","core/checkKeywords.ts","utils/path.ts","components/renderViolation.tsx","pages/Check.tsx","core/checkUrlDomains.ts","content/instructions.md","pages/Instructions.tsx","utils/react.ts","utils/snarkdown.ts","Routes.tsx","App.tsx","index.tsx"],"names":["nonWord","renderAnchors","el","defaultVal","slugs","Proxy","Object","create","get","target","key","querySelectorAll","heading","textContent","slug","toLowerCase","replace","regex","trim","x","id","filter","Boolean","join","classList","add","htmlToFragment","html","temp","document","createElement","innerHTML","content","cache","Map","joinPath","segments","process","flat","renderViolation","violation","kind","domain","className","dangerouslySetInnerHTML","__html","context","found","length","notFound","minKeywordsNeeded","map","keyword","idx","readFile","file","Promise","res","reader","FileReader","onload","e","result","readAsArrayBuffer","Check","useState","_keywords","_setKeywords","keywords","useMemo","split","listId","domainBlacklist","setDomainBlacklist","useEffect","fetch","then","a","headers","text","list","loading","setLoading","htmlResult","setHtmlResult","fileChangeHandler","useCallback","files","currentTarget","arrayBuffer","mammoth","convertToHtml","keywordViolations","value","keywordMatchers","sort","b","matcher","str","source","i","findIndex","y","test","Math","ceil","leafNodes","has","fragment","childNodes","nodeType","Node","TEXT_NODE","set","entries","keywordMatcher","push","splice","reverse","checkKeywords","domainViolations","violations","protocolMatcher","matchers","protocol","match","hostname","pattern","matchPattern","endsWith","slice","assign","links","link","url","href","parent","parentElement","m","find","leafNode","domains","RegExp","checkUrlDomains","onChange","type","placeholder","Instructions","callback","setHtml","history","useHistory","instructionsMdUrl","l","some","ch","startsWith","_snarkdown","ref","getAttribute","setAttribute","prependPublicUrlToRelativeLinks","addEventListener","nodeName","preventDefault","window","location","origin","open","contains","hash","scrollIntoView","handleLinks","setTimeout","matchedEl","pipe","decodeURIComponent","CSS","escape","querySelector","scrollHashIntoView","parentEl","observer","MutationObserver","disconnect","observe","childList","Routes","exact","path","App","basename","activeClassName","to","ts","console","info","Date","Number","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9c36e7df.chunk.js","sourcesContent":["import { regex } from 'fancy-regex'\n\nexport const slugify = (str: string) =>\n\tstr\n\t\t.toLowerCase()\n\t\t.replace(\n\t\t\tregex('gu')`[\n\t\t\t\t^\n\t\t\t\t\\p{Letter}\n\t\t\t\t\\p{Mark}\n\t\t\t\t\\p{Number}\n\t\t\t]+`,\n\t\t\t' ',\n\t\t)\n\t\t.trim()\n\t\t.replace(/\\s+/g, '-')\n\nexport const filenameify = (date: Date) =>\n\tdate.toISOString().replace(/:/g, '_').slice(0, 19) + 'Z'\n\nexport const nonWord = /[^\\p{Letter}\\p{Mark}\\p{Number}]+/gu\n\nexport const forgivingPunctuation = (str: string) =>\n\tstr.replace(nonWord, nonWord.source)\n","import { useHistory } from 'react-router-dom'\nimport { pipe } from 'fp-ts/function'\nimport { slugify } from './formatters'\nimport { hashWithDefault } from './utils'\n\nexport const renderAnchors = (el: HTMLElement) => {\n\tconst slugs = hashWithDefault(0)\n\n\tfor (const heading of el.querySelectorAll(\n\t\t'h2, h3, h4, h5, h6, .anchored',\n\t)) {\n\t\tif (heading.textContent) {\n\t\t\tconst slug = slugify(heading.textContent) || 'heading'\n\n\t\t\tconst x = ++slugs[slug]\n\n\t\t\theading.id = [slug, x > 1 && x].filter(Boolean).join('-')\n\t\t\theading.classList.add('anchored')\n\t\t}\n\t}\n}\n\nexport const prependPublicUrlToRelativeLinks = (el: HTMLElement) => {\n\tfor (const link of el.querySelectorAll('a')) {\n\t\tconst href = link.getAttribute('href')\n\n\t\tif (href?.startsWith('/')) {\n\t\t\tlink.setAttribute('href', process.env.PUBLIC_URL + href)\n\t\t}\n\t}\n}\n\nexport const handleLinks = (\n\tel: HTMLElement,\n\thistory: ReturnType<typeof useHistory>,\n) => {\n\tel.addEventListener('click', (e) => {\n\t\tconst target = e.target as HTMLAnchorElement\n\t\tconst href = target.getAttribute('href')\n\n\t\tif (target.nodeName === 'A' && href) {\n\t\t\te.preventDefault()\n\n\t\t\tif (\n\t\t\t\thref.startsWith('http') &&\n\t\t\t\t!href.startsWith(window.location.origin)\n\t\t\t) {\n\t\t\t\twindow.open(href, '_blank', 'noopener noreferrer')\n\t\t\t} else {\n\t\t\t\thistory.push(href.slice(process.env.PUBLIC_URL.length))\n\t\t\t}\n\t\t} else if (target.classList.contains('anchored')) {\n\t\t\twindow.location.hash = target.id\n\t\t\ttarget.scrollIntoView(true)\n\t\t}\n\t})\n}\n\nexport const scrollHashIntoView = (el: HTMLElement) => {\n\tif (window.location.hash) {\n\t\tsetTimeout(() => {\n\t\t\tconst matchedEl = pipe(\n\t\t\t\twindow.location.hash.slice(1),\n\t\t\t\tdecodeURIComponent,\n\t\t\t\tCSS.escape,\n\t\t\t\t(id) => el.querySelector(`#${id}`),\n\t\t\t)\n\n\t\t\tmatchedEl?.scrollIntoView(true)\n\t\t\t// 100ms to counteract browser position retaining\n\t\t}, 100)\n\t}\n}\n\nexport const htmlToFragment = (html: string) => {\n\tconst temp = document.createElement('template')\n\ttemp.innerHTML = html\n\n\treturn temp.content\n}\n","export const hashWithDefault = <T>(defaultVal: T) =>\n\tnew Proxy(Object.create(null) as Record<string, T>, {\n\t\tget(target, key: string) {\n\t\t\treturn key in target ? target[key] : defaultVal\n\t\t},\n\t})\n","import { regex } from 'fancy-regex'\nimport { Violation } from '../types/Violation'\nimport { htmlToFragment } from '../utils/dom'\nimport { forgivingPunctuation, nonWord } from '../utils/formatters'\n\nconst cache = new Map<string, HTMLElement[]>()\n\nexport const checkKeywords = (\n\thtml: string,\n\tkeywords: string[],\n): Violation[] => {\n\tif (!keywords.length) {\n\t\treturn [\n\t\t\t{\n\t\t\t\tkind: 'NoKeywordsSpecified',\n\t\t\t},\n\t\t]\n\t} else {\n\t\tconst keywordMatchers = [...keywords]\n\t\t\t.sort((a, b) => b.length - a.length)\n\t\t\t.map((keyword) => ({\n\t\t\t\tkeyword,\n\t\t\t\tmatcher: regex('iu')`\n\t\t\t\t\t(?<=^|${nonWord})\n\t\t\t\t\t${forgivingPunctuation(keyword)}\n\t\t\t\t\t(?=$|${nonWord})\n\t\t\t\t`,\n\t\t\t}))\n\t\t\t.filter(\n\t\t\t\t(x, i, a) =>\n\t\t\t\t\ta.findIndex((y) =>\n\t\t\t\t\t\tregex('iu')`^${x.matcher}$`.test(y.keyword),\n\t\t\t\t\t) === i,\n\t\t\t)\n\n\t\tconst found: string[] = []\n\t\tconst minKeywordsNeeded = Math.ceil(keywordMatchers.length / 2)\n\n\t\tconst leafNodes = cache.has(html)\n\t\t\t? cache.get(html)!\n\t\t\t: (() => {\n\t\t\t\t\tconst fragment = htmlToFragment(html)\n\n\t\t\t\t\tconst leafNodes = [\n\t\t\t\t\t\t...fragment.querySelectorAll<HTMLElement>('*'),\n\t\t\t\t\t].filter(\n\t\t\t\t\t\t(x) =>\n\t\t\t\t\t\t\tx.childNodes.length === 1 &&\n\t\t\t\t\t\t\tx.childNodes[0].nodeType === Node.TEXT_NODE,\n\t\t\t\t\t)\n\n\t\t\t\t\tcache.set(html, leafNodes)\n\n\t\t\t\t\treturn leafNodes\n\t\t\t  })()\n\n\t\tfor (const leafNode of leafNodes) {\n\t\t\tconst text = leafNode.textContent!\n\n\t\t\tfor (const [i, keywordMatcher] of keywordMatchers.entries()) {\n\t\t\t\tif (keywordMatcher.matcher.test(text)) {\n\t\t\t\t\tfound.push(keywordMatcher.keyword)\n\t\t\t\t\tkeywordMatchers.splice(i, 1)\n\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn found.length < minKeywordsNeeded\n\t\t\t? [\n\t\t\t\t\t{\n\t\t\t\t\t\tkind: 'TooFewKeywordsFound',\n\t\t\t\t\t\tminKeywordsNeeded,\n\t\t\t\t\t\tfound,\n\t\t\t\t\t\tnotFound: keywordMatchers\n\t\t\t\t\t\t\t.map((x) => x.keyword)\n\t\t\t\t\t\t\t.reverse(),\n\t\t\t\t\t},\n\t\t\t  ]\n\t\t\t: []\n\t}\n}\n","import { join } from 'path'\n\nexport const joinPath = (...segments: string[]) =>\n\tjoin(process.env.PUBLIC_URL, ...segments.flat())\n","import { Violation } from '../types/Violation'\n\nexport const renderViolation = (violation: Violation): JSX.Element => {\n\tswitch (violation.kind) {\n\t\tcase 'Domain':\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tMatched blacklisted domain\n\t\t\t\t\t\t<code>{violation.domain}</code>. Context:\n\t\t\t\t\t</p>\n\t\t\t\t\t<blockquote\n\t\t\t\t\t\tclassName='violation-context'\n\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t__html: violation.context,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)\n\t\tcase 'NoKeywordsSpecified':\n\t\t\treturn <p>No keywords specified. Please specify target keywords.</p>\n\t\tcase 'TooFewKeywordsFound':\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tOnly {violation.found.length} of{' '}\n\t\t\t\t\t\t{violation.found.length + violation.notFound.length}{' '}\n\t\t\t\t\t\tkeywords found (\n\t\t\t\t\t\t<strong>{violation.minKeywordsNeeded} needed</strong>)\n\t\t\t\t\t</p>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<strong>Found:</strong>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{violation.found.map((keyword, idx) => (\n\t\t\t\t\t\t\t\t<li key={idx}>{keyword}</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<strong>Not found:</strong>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{violation.notFound.map((keyword, idx) => (\n\t\t\t\t\t\t\t\t<li key={idx}>{keyword}</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)\n\t}\n}\n","import {\n\tFC,\n\tuseCallback,\n\tuseEffect,\n\tuseMemo,\n\tuseState,\n\tReactEventHandler,\n} from 'react'\nimport { checkUrlDomains } from '../core/checkUrlDomains'\nimport { checkKeywords } from '../core/checkKeywords'\nimport { joinPath } from '../utils/path'\nimport mammoth from 'mammoth'\nimport { renderViolation } from '../components/renderViolation'\n\nexport const readFile = (file: File) =>\n\tnew Promise<ArrayBuffer>((res) => {\n\t\tconst reader = new FileReader()\n\n\t\treader.onload = (e) => res(e.target!.result as ArrayBuffer)\n\n\t\treader.readAsArrayBuffer(file)\n\t})\n\ntype HtmlResult = Awaited<ReturnType<typeof mammoth.convertToHtml>>\n\nexport const Check: FC = () => {\n\tconst [_keywords, _setKeywords] = useState('')\n\n\tconst keywords = useMemo(\n\t\t() =>\n\t\t\t_keywords\n\t\t\t\t.split('\\n')\n\t\t\t\t.map((x) => x.trim().split('\\t')[0])\n\t\t\t\t.filter((x) => x && x.toLowerCase() !== 'keyword'),\n\t\t[_keywords],\n\t)\n\n\tconst listId = 'list'\n\n\tconst [domainBlacklist, setDomainBlacklist] = useState<string[]>([])\n\n\tuseEffect(() => {\n\t\tif (listId) {\n\t\t\tfetch(joinPath('lists', `${listId}.txt`)).then(async (res) => {\n\t\t\t\tif (\n\t\t\t\t\tres.headers.get('content-type')?.split(';')[0].trim() !==\n\t\t\t\t\t'text/plain'\n\t\t\t\t) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tconst list = await res.text()\n\n\t\t\t\tsetDomainBlacklist(list.split('\\n').filter(Boolean))\n\t\t\t})\n\t\t}\n\t}, [listId])\n\n\tconst [loading, setLoading] = useState(false)\n\n\tconst [htmlResult, setHtmlResult] = useState<null | HtmlResult>(null)\n\n\tconst fileChangeHandler: ReactEventHandler<HTMLInputElement> = useCallback(\n\t\tasync (e) => {\n\t\t\tconst { files } = e.currentTarget\n\n\t\t\tif (!files?.length) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tsetLoading(true)\n\n\t\t\tconst file = files[0]\n\t\t\tconst arrayBuffer = await readFile(file)\n\n\t\t\tconst result = await mammoth.convertToHtml({ arrayBuffer })\n\n\t\t\tsetHtmlResult(result)\n\n\t\t\tsetLoading(false)\n\t\t},\n\t\t[],\n\t)\n\n\tconst keywordViolations = useMemo(\n\t\t() =>\n\t\t\thtmlResult?.value ? checkKeywords(htmlResult.value, keywords) : [],\n\t\t[htmlResult, keywords],\n\t)\n\n\tconst domainViolations = useMemo(\n\t\t() =>\n\t\t\thtmlResult?.value\n\t\t\t\t? checkUrlDomains(htmlResult.value, domainBlacklist)\n\t\t\t\t: [],\n\t\t[htmlResult, domainBlacklist],\n\t)\n\n\tconst violations = useMemo(\n\t\t() => [...domainViolations, ...keywordViolations],\n\t\t[keywordViolations, domainViolations],\n\t)\n\n\treturn !domainBlacklist.length ? (\n\t\t<>\n\t\t\t<div className='spaced'>Loading...</div>\n\t\t</>\n\t) : (\n\t\t<form>\n\t\t\t<h1>Check</h1>\n\t\t\t<div className='spaced'>\n\t\t\t\t<label>\n\t\t\t\t\tUpload file (DOCX)\n\t\t\t\t\t<input onChange={fileChangeHandler} type='file' />\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div className='spaced'>\n\t\t\t\t<label>\n\t\t\t\t\tKeywords\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tplaceholder='Paste target keywords here (one per line)'\n\t\t\t\t\t\tonChange={(e) => _setKeywords(e.currentTarget.value)}\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\t\t\t</div>\n\n\t\t\t<hr />\n\n\t\t\t<output>\n\t\t\t\t<div>\n\t\t\t\t\t{loading ? (\n\t\t\t\t\t\t<>Checking...</>\n\t\t\t\t\t) : !htmlResult ? (\n\t\t\t\t\t\t<>No file selected.</>\n\t\t\t\t\t) : !violations.length ? (\n\t\t\t\t\t\t<>No issues found 🎉</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{violations.map((x, i) => (\n\t\t\t\t\t\t\t\t<li key={i}>{renderViolation(x)}</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</output>\n\t\t</form>\n\t)\n}\n","import { matchPattern } from 'browser-extension-url-match'\nimport { Violation } from '../types/Violation'\nimport { htmlToFragment } from '../utils/dom'\n\nexport const checkUrlDomains = (\n\thtml: string,\n\tdomainBlacklist: string[],\n): Violation[] => {\n\tconst violations: Violation[] = []\n\tconst fragment = htmlToFragment(html)\n\n\tconst anyProtocol = '*://'\n\tconst protocolMatcher = /^\\w+:\\/{2,3}/\n\n\tconst matchers = domainBlacklist.map((domain) => {\n\t\tconst protocol = domain.match(protocolMatcher)?.[0] ?? anyProtocol\n\n\t\tconst segments = domain.replace(protocolMatcher, '').split('.')\n\n\t\tconst hostname = (\n\t\t\tsegments.length === 2 ? ['*', ...segments] : segments\n\t\t).join('.')\n\n\t\tconst pattern = matchPattern(\n\t\t\t`${protocol}${\n\t\t\t\thostname.endsWith('/') ? hostname.slice(0, -1) : hostname\n\t\t\t}/*`,\n\t\t)\n\n\t\treturn Object.assign({ domain }, pattern)\n\t})\n\n\tconst links = fragment.querySelectorAll<HTMLAnchorElement>('a[href]')\n\n\tconst leafNodes = [...fragment.querySelectorAll<HTMLElement>('*')].filter(\n\t\t(x) =>\n\t\t\tx.childNodes.length === 1 &&\n\t\t\tx.childNodes[0].nodeType === Node.TEXT_NODE,\n\t)\n\n\tfor (const link of links) {\n\t\tconst { href: url, textContent: text } = link\n\n\t\tconst parent = link.parentElement ?? link\n\n\t\tfor (const x of parent.querySelectorAll('a[href]')) {\n\t\t\tx.classList[x === link ? 'add' : 'remove']('violation')\n\t\t}\n\n\t\tconst m = matchers.find((m) => m.match(url))\n\n\t\tif (m) {\n\t\t\tconst { pattern, domain } = m\n\n\t\t\tviolations.push({\n\t\t\t\tkind: 'Domain',\n\t\t\t\turl,\n\t\t\t\tcontext: parent.innerHTML,\n\t\t\t\ttext: text!,\n\t\t\t\tpattern,\n\t\t\t\tdomain,\n\t\t\t})\n\t\t}\n\t}\n\n\tfor (const leafNode of leafNodes) {\n\t\tconst text = leafNode.textContent!\n\n\t\tconst parent = leafNode.parentElement ?? leafNode\n\n\t\tconst domains = text.match(/[a-z0-9-]+(\\.[a-z0-9]+)+/gi) ?? []\n\n\t\tfor (const domain of domains) {\n\t\t\tconst m = matchers.find((m) => m.match(`https://${domain}`))\n\n\t\t\tif (m) {\n\t\t\t\tconst { pattern, domain } = m\n\n\t\t\t\tconst context = parent.innerHTML.replace(\n\t\t\t\t\tnew RegExp(domain.replace(/\\./g, '\\\\.'), 'i'),\n\t\t\t\t\t`<span class=\"violation\">${domain}</span>`,\n\t\t\t\t)\n\n\t\t\t\tviolations.push({\n\t\t\t\t\tkind: 'Domain',\n\t\t\t\t\turl: domain,\n\t\t\t\t\tcontext,\n\t\t\t\t\ttext: text!,\n\t\t\t\t\tpattern,\n\t\t\t\t\tdomain,\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\treturn violations\n}\n","export default __webpack_public_path__ + \"static/media/instructions.a9a97ea1.md\";","import { FC, useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport instructionsMdUrl from '../content/instructions.md'\nimport {\n\thandleLinks,\n\tprependPublicUrlToRelativeLinks,\n\trenderAnchors,\n\tscrollHashIntoView,\n} from '../utils/dom'\nimport { onHtmlRender } from '../utils/react'\nimport { snarkdown } from '../utils/snarkdown'\n\nexport const Instructions: FC = () => {\n\tconst [html, setHtml] = useState('')\n\n\tconst history = useHistory()\n\n\tuseEffect(() => {\n\t\tfetch(instructionsMdUrl, { cache: 'force-cache' }).then(async (res) => {\n\t\t\tconst content = await res.text()\n\n\t\t\tconst html = snarkdown(content)\n\n\t\t\tsetHtml(html)\n\t\t})\n\t}, [])\n\n\treturn (\n\t\t<div\n\t\t\tref={onHtmlRender((el) => {\n\t\t\t\t// setup\n\t\t\t\trenderAnchors(el)\n\t\t\t\tprependPublicUrlToRelativeLinks(el)\n\t\t\t\thandleLinks(el, history)\n\n\t\t\t\t// effects\n\t\t\t\tscrollHashIntoView(el)\n\t\t\t})}\n\t\t\tdangerouslySetInnerHTML={{ __html: html }}\n\t\t/>\n\t)\n}\n","export const onHtmlRender =\n\t(callback: (parentEl: HTMLElement) => void) =>\n\t(parentEl: HTMLElement | null) => {\n\t\tif (!parentEl) return\n\n\t\tconst observer = new MutationObserver((m) => {\n\t\t\tcallback(parentEl)\n\n\t\t\tobserver.disconnect()\n\t\t})\n\n\t\tobserver.observe(parentEl, { childList: true })\n\t}\n","import { default as _snarkdown } from 'snarkdown'\n\nexport const snarkdown = (md: string) => {\n\tconst html = md\n\t\t.split(/((?<=^|\\n)```\\r?\\n[\\s\\S]*?\\r?\\n```)/)\n\t\t.map((m, i) =>\n\t\t\ti % 2\n\t\t\t\t? `<pre><code>${m\n\t\t\t\t\t\t.split(/\\r?\\n/)\n\t\t\t\t\t\t.slice(1, -1)\n\t\t\t\t\t\t.join('\\n')}</pre></code>`\n\t\t\t\t: m\n\t\t\t\t\t\t.split(/(?:\\r?\\n){2,}/)\n\t\t\t\t\t\t.map((l) => {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t[' ', '\\t', '#', '-', '*', '`', '~'].some(\n\t\t\t\t\t\t\t\t\t(ch) => l.startsWith(ch),\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn /^\\s*-{3,}\\s*$/.test(l)\n\t\t\t\t\t\t\t\t\t? `<hr>`\n\t\t\t\t\t\t\t\t\t: _snarkdown(l)\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn `<p>${_snarkdown(l)}</p>`\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.join(''),\n\t\t)\n\t\t.join('')\n\t\t.replace(/<p><\\/p>/g, '')\n\n\treturn html\n}\n","import { FC } from 'react'\nimport { Check } from './pages/Check'\nimport { Switch, Route } from 'react-router-dom'\nimport { Instructions } from './pages/Instructions'\n\nexport const Routes: FC = () => {\n\treturn (\n\t\t<Switch>\n\t\t\t<Route exact path='/'>\n\t\t\t\t<Check />\n\t\t\t</Route>\n\t\t\t<Route path='/instructions'>\n\t\t\t\t<Instructions />\n\t\t\t</Route>\n\t\t</Switch>\n\t)\n}\n","import { FC } from 'react'\nimport { BrowserRouter as Router, NavLink } from 'react-router-dom'\nimport { Routes } from './Routes'\n\nexport const App: FC = () => {\n\treturn (\n\t\t<>\n\t\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t\t<nav className='tabs'>\n\t\t\t\t\t<NavLink exact activeClassName='active' to='/'>\n\t\t\t\t\t\tCheck\n\t\t\t\t\t</NavLink>\n\t\t\t\t\t<NavLink activeClassName='active' to='/instructions'>\n\t\t\t\t\t\tInstructions\n\t\t\t\t\t</NavLink>\n\t\t\t\t</nav>\n\t\t\t\t<main className='container'>\n\t\t\t\t\t<Routes />\n\t\t\t\t</main>\n\t\t\t</Router>\n\t\t</>\n\t)\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'chota/dist/chota.css' // can't use .min.css due to CRA transpiling bug\nimport './styles/index.css'\nimport { App } from './App'\nimport { joinPath } from './utils/path'\n\nfetch(joinPath('build-timestamp.txt')).then(async (res) => {\n\tconst ts = await res.text()\n\n\tconsole.info('App last built', new Date(Number(ts)))\n})\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n)\n"],"sourceRoot":""}